package tStackTest;

import static org.junit.Assert.*;


import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

public class TestGenericStack {

	/*@BeforeClass
	public static void setUpBeforeClass() throws Exception {
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Before
	public void setUp() throws Exception {
	}

	@After
	public void tearDown() throws Exception {
	}*/
public GenericStack<String> obj = new GenericStack<String>();
	@Test
	/*public void testPeek() {
		String txt = "Hello";
		obj.push(txt);
		assertEquals(obj.peek(),txt);
	}*/
	public void testLIFO(){
		String txt = "There";
		String txt1 = "Hey";
		obj.push(txt1);
		obj.push(txt);
		assertEquals(obj.pop(), txt);
	}
	@Test
	public void testIsEmpty(){
		obj.empty();
		
		assertTrue(obj.isEmpty());
	}

	@Test
	public void testPush(){
		int noOfPushes = 10;
				for(int i=0; i<noOfPushes; i++){
					obj.push("Haha");
					
				}
				assertEquals(obj.size, noOfPushes);
		
	}
		
	}
	
	



